{"ast":null,"code":"var _jsxFileName = \"/Users/iseungjin/Desktop/react-movie-web-service-main/src/routes/Home.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\"; // Function -> Class component 로 변환(React.Component를 상속)\n// Component의 render 메서드와 state를 상속\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      // axios 라이브러리를 사용하여 영화리스트를 get 한다\n      // async와 await 힌트를 사용하여 비동기처리를 한다.(둘은 같이 가야함)\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      console.log(movies);\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getMovies();\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: movies.map(movie => {\n          console.log(movie);\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            id: movie.id,\n            year: movie.year,\n            title: movie.title,\n            summary: movie.summary,\n            poster: movie.medium_cover_image,\n            genres: movie.genres\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/iseungjin/Desktop/react-movie-web-service-main/src/routes/Home.js"],"names":["React","axios","Movie","Home","Component","state","isLoading","movies","getMovies","data","get","console","log","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP,C,CAEA;AACA;;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFyB;;AAAA,SAOjCC,SAPiC,GAOrB,YAAY;AACtB;AACA;AACA,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIF,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAJV;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAjBgC;;AAAA,SAmBjCQ,iBAnBiC,GAmBb,MAAM;AACxB,WAAKN,SAAL;AACD,KArBgC;AAAA;;AAuBjCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AAEA,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACGC,SAAS,gBACV;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADU,gBAKR;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGC,MAAM,CAACS,GAAP,CAAWC,KAAK,IAAI;AACnBN,UAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,8BAAO,QAAC,KAAD;AACO,YAAA,EAAE,EAAEA,KAAK,CAACC,EADjB;AAEO,YAAA,IAAI,EAAED,KAAK,CAACE,IAFnB;AAGO,YAAA,KAAK,EAAEF,KAAK,CAACG,KAHpB;AAIO,YAAA,OAAO,EAAEH,KAAK,CAACI,OAJtB;AAKO,YAAA,MAAM,EAAEJ,KAAK,CAACK,kBALrB;AAMO,YAAA,MAAM,EAAEL,KAAK,CAACM;AANrB,aAAYN,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAQD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAjDgC;;AAoDnC,eAAef,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n// Function -> Class component 로 변환(React.Component를 상속)\r\n// Component의 render 메서드와 state를 상속\r\nclass Home extends React.Component {\r\n\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // axios 라이브러리를 사용하여 영화리스트를 get 한다\r\n    // async와 await 힌트를 사용하여 비동기처리를 한다.(둘은 같이 가야함)\r\n    const { \r\n      data: { \r\n        data: { movies } \r\n      } \r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    console.log(movies);\r\n    this.setState({ movies, isLoading: false });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n        <div className=\"loader\">\r\n          <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => {\r\n              console.log(movie);\r\n              return <Movie key={movie.id}\r\n                            id={movie.id} \r\n                            year={movie.year} \r\n                            title={movie.title} \r\n                            summary={movie.summary} \r\n                            poster={movie.medium_cover_image}\r\n                            genres={movie.genres}\r\n                      />\r\n            })}\r\n          </div>\r\n        )}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}